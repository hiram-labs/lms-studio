---
import ButtonContentStart from "../../../components/ButtonContentStart.astro";
import ContentCard from "../../../components/ContentCard.astro";
import ErrorCapture from "../../../components/ErrorCapture.astro";
import BaseLayout from "../../../layouts/BaseLayout.astro";

import C from "../../../libs/config"
import { directus_client_no_auth } from "../../../libs/directus";

import { readItems, readMe, withToken, type DirectusUser } from "@directus/sdk";
import { logger } from '@it-astro:logger';

const TOKEN = Astro.cookies.get(C.COOKIE_KEY_USER_STATIC_TOKEN)?.value
if(!TOKEN) return Astro.redirect("/login/pin")

let errors: any = []
let userResponse: any = {}
let contentResponse: any = []

try{
    userResponse = await directus_client_no_auth.request<DirectusUser>(withToken(TOKEN, readMe()))
    contentResponse = await directus_client_no_auth.request(withToken(TOKEN, readItems("lms_content")))
} catch (error) {
    errors = (error as any)?.errors || [{message: error}]
    errors.forEach((error: any) => {logger.error(error.message)});
}

---

<BaseLayout title="content">
    <div class="p-10">
        <ErrorCapture errors={errors}>
            <div class="flex justify-between w-full">
                <div class="prose">
                    <h1 id="browse-all-content-heading" class="mb-10">
                        <a aria-hidden="true" tabindex="-1" href="#browse-all-content-heading" class="no-underline">
                            <span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="size-5">
                                    <path d="M12.232 4.232a2.5 2.5 0 0 1 3.536 3.536l-1.225 1.224a.75.75 0 0 0 1.061 1.06l1.224-1.224a4 4 0 0 0-5.656-5.656l-3 3a4 4 0 0 0 .225 5.865.75.75 0 0 0 .977-1.138 2.5 2.5 0 0 1-.142-3.667l3-3Z" />
                                    <path d="M11.603 7.963a.75.75 0 0 0-.977 1.138 2.5 2.5 0 0 1 .142 3.667l-3 3a2.5 2.5 0 0 1-3.536-3.536l1.225-1.224a.75.75 0 0 0-1.061-1.06l-1.224 1.224a4 4 0 1 0 5.656 5.656l3-3a4 4 0 0 0-.225-5.865Z" />
                                </svg>
                            </span>
                        </a>
                        Welcome back,&nbsp;&nbsp;<span class="text-yellow-500 italic">{userResponse.first_name} {userResponse.last_name}!</span>
                    </h1>
                </div>
                <div>
                    <div class="tooltip tooltip-bottom" data-tip="logout">
                        <a href="/login/pin" class="btn btn-circle" aria-label="logout">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-6">
                                <path fill-rule="evenodd" d="M16.5 3.75a1.5 1.5 0 0 1 1.5 1.5v13.5a1.5 1.5 0 0 1-1.5 1.5h-6a1.5 1.5 0 0 1-1.5-1.5V15a.75.75 0 0 0-1.5 0v3.75a3 3 0 0 0 3 3h6a3 3 0 0 0 3-3V5.25a3 3 0 0 0-3-3h-6a3 3 0 0 0-3 3V9A.75.75 0 1 0 9 9V5.25a1.5 1.5 0 0 1 1.5-1.5h6ZM5.78 8.47a.75.75 0 0 0-1.06 0l-3 3a.75.75 0 0 0 0 1.06l3 3a.75.75 0 0 0 1.06-1.06l-1.72-1.72H15a.75.75 0 0 0 0-1.5H4.06l1.72-1.72a.75.75 0 0 0 0-1.06Z" clip-rule="evenodd" />
                            </svg>
                            <span class="hidden">Logout</span>
                        </a>
                    </div>
                </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {contentResponse.map((item: any) => (
                    <ContentCard imageURL={item.content_image_url} title={item.content_title} description={item.content_description}>
                        <ButtonContentStart contentLink={item.content_link} deepLink={item.content_deep_link} />
                        <a href={`/landing/content/details?${C.URL_QUERY_PARAM_ID}=${item.id}`} class="btn w-full">Details</a>
                    </ContentCard>
                ))}
            </div>
        </ErrorCapture>
    </div>
</BaseLayout>